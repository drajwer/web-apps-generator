//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SneakParser.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISneakParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class SneakParserBaseListener : ISneakParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] SneakParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] SneakParser.CompileUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFile([NotNull] SneakParser.FileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFile([NotNull] SneakParser.FileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.classDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDef([NotNull] SneakParser.ClassDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.classDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDef([NotNull] SneakParser.ClassDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperties([NotNull] SneakParser.PropertiesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.properties"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperties([NotNull] SneakParser.PropertiesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] SneakParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] SneakParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.annotations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotations([NotNull] SneakParser.AnnotationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.annotations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotations([NotNull] SneakParser.AnnotationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation([NotNull] SneakParser.AnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation([NotNull] SneakParser.AnnotationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParams([NotNull] SneakParser.ParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParams([NotNull] SneakParser.ParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.paramlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamlist([NotNull] SneakParser.ParamlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.paramlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamlist([NotNull] SneakParser.ParamlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SneakParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] SneakParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SneakParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] SneakParser.ParamContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
