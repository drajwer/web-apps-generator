{%- raw -%}
import { Button, DialogTitle, Dialog, DialogContent, DialogContentText, DialogActions } from "@material-ui/core";
import DeleteIcon from '@material-ui/icons/Delete';
import KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';
import EditIcon from '@material-ui/icons/Edit';
import * as React from 'react';

interface ITableToolbarProps {
    showDelete: boolean,
    showEdit: boolean,
    onDeleteClick: () => void
    onEditClick: () => void
    onBackClick: () => void
}

interface ITableToolbarState {
    showDeleteModal: boolean
}

class PageButtons extends React.Component<ITableToolbarProps, ITableToolbarState> {
    /**
     *
     */
    constructor(props: ITableToolbarProps) {
        super(props);
        this.state = { showDeleteModal: false };
    }
    public render() {
        const props = this.props;
        return (
            <div style={{ textAlign: "right" }}>
                {this.renderBackButton()}
                {props.showEdit ? this.renderEditButton() : ""}
                {props.showDelete ? this.renderDeleteButton() : ""}
                {this.renderDeleteDialog()}
            </div>
        );
    }

    private renderDeleteButton() {
        return (
                <Button variant="contained" color="secondary" onClick={this.onToggleShowDeleteModal} style={{ marginLeft: "10px", marginTop: "10px" }}>
                    Delete
            		<DeleteIcon />
                </Button>
        );
    }

    private renderEditButton() {
        const props = this.props;
        return (
            <Button variant="contained" color="primary" onClick={props.onEditClick} style={{ marginLeft: "10px", marginTop: "10px" }}>
                Edit
                <EditIcon />
            </Button>
        );
    }

    private renderBackButton() {
        const props = this.props;
        return (
            <Button variant="contained" color="primary" onClick={props.onBackClick} style={{ marginTop: "10px" }}>
                Back
                <KeyboardArrowLeftIcon />
            </Button>
        );
    }

    private renderDeleteDialog() {
        return (
            <Dialog
                open={this.state.showDeleteModal}
                onClose={this.onToggleShowDeleteModal}
            >
                <DialogTitle>Delete confirmation</DialogTitle>
                <DialogContent>
                    <DialogContentText>
                        Are you sure you want to delete this item?
                    </DialogContentText>
                </DialogContent>
                <DialogActions>
                    <Button onClick={this.onToggleShowDeleteModal} color="primary" autoFocus={true}>
                        No
                    </Button>
                    <Button onClick={this.onDeleteConfirm} color="primary">
                        Yes
                    </Button>
                </DialogActions>
            </Dialog>
        );
    }

    private onDeleteConfirm = () => {
        this.props.onDeleteClick();
        this.onToggleShowDeleteModal();
    }

    private onToggleShowDeleteModal = () => {
        this.setState({ showDeleteModal: !this.state.showDeleteModal });
    }
}

export default PageButtons;
{%- endraw -%}