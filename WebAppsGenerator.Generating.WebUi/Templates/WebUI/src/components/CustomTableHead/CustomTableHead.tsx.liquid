import * as React from 'react';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';
import TableSortLabel from '@material-ui/core/TableSortLabel';
import Checkbox from '@material-ui/core/Checkbox';
import Tooltip from '@material-ui/core/Tooltip';

export interface IRowDescription {
    id: string,
    disablePadding: boolean,
    label: string
};

interface IProps {
    onSelectAllClick: any,
    order: "asc" | "desc" | undefined,
    orderBy: string,
    numSelected: number,
    rowCount: number,
    rows: IRowDescription[],
    onRequestSort: any,
    showCheckboxes: boolean,
    multipleSelects: boolean
}

export default class CustomTableHead extends React.Component<IProps> {
    public createSortHandler = (property: any) => (event: any) => {
        this.props.onRequestSort(event, property);
    };

    public render() {
        const { onSelectAllClick, numSelected, rowCount, order, orderBy, rows, showCheckboxes, multipleSelects } = this.props;

        return (
            <TableHead>
                <TableRow>
                    {showCheckboxes ?
                        <TableCell padding="checkbox">
                            {multipleSelects ?
                                <Checkbox
                                    indeterminate={numSelected > 0 && numSelected < rowCount}
                                    checked={rowCount > 0 && numSelected === rowCount}
                                    onChange={onSelectAllClick}
                                />
                                :
                                ''
                            }
                        </TableCell>
                        :
                        ''}
                    {rows.map(row => {
                        return (
                            <TableCell
                                key={row.id}
                                align="left"
                                padding={row.disablePadding ? 'none' : 'default'}
                                sortDirection={orderBy === row.id ? order : false}
                            >
                                <Tooltip
                                    title="Sort"
                                    placement='bottom'
                                    enterDelay={300}
                                >
                                    <TableSortLabel
                                        active={orderBy === row.id}
                                        direction={order}
                                        onClick={this.createSortHandler(row.id)}
                                    >
                                        {row.label}
                                    </TableSortLabel>
                                </Tooltip>
                            </TableCell>
                        );
                    }, this)}
                </TableRow>
            </TableHead>
        );
    }
}