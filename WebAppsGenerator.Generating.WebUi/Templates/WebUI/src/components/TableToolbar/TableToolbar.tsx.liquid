import * as React from 'react';
import classNames from 'classnames';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import FilterListIcon from '@material-ui/icons/FilterList';
import AddIcon from '@material-ui/icons/Add';
import RefreshIcon from '@material-ui/icons/Refresh';
import { withStyles } from '@material-ui/core/styles';
import { lighten } from '@material-ui/core/styles/colorManipulator';
import history from 'src/history';

interface ITableToolbarProps {
    classes: any,
	showAddButton: boolean,
    numSelected: number,
    tableTitle: string,
	onRefresh: () => void,
};

const TableToolbar = (props: ITableToolbarProps) => {
    const { showAddButton, numSelected, classes, tableTitle, onRefresh } = props;

    const handleAddClick = () => {
        history.push(`${history.location.pathname}/new`);
    }

    return (
        <Toolbar
            className={classNames(classes.root, {
                [classes.highlight]: numSelected > 0,
            })}
        >
            <div className={classes.title}>
                {numSelected > 0 ? (
                    <Typography color="inherit" variant="subtitle1">
                        {numSelected} selected
                    </Typography>
                ) : (
                        <Typography variant="h6" id="tableTitle">
                            {tableTitle}
                        </Typography>
                    )}
            </div>
            <div className={classes.spacer} />
            <div className={classes.actions}>
                <Tooltip title="Filter list">
                    <IconButton aria-label="Filter list">
                        <FilterListIcon />
                    </IconButton>
                </Tooltip>

                <Tooltip title="Refresh list">
                    <IconButton aria-label="Refresh list">
                        <RefreshIcon onClick={onRefresh} />
                    </IconButton>
                </Tooltip>
				{
				showAddButton?
					(<Tooltip title="Add item">
						<IconButton aria-label="Add item">
							<AddIcon onClick={handleAddClick} />
						</IconButton>
					</Tooltip>)
					:
					null
				}
            </div>
        </Toolbar>
    );
};

const toolbarStyles = (theme: any) => ({
    root: {
        paddingRight: theme.spacing.unit,
    },
    highlight:
        theme.palette.type === 'light'
            ? {
                color: theme.palette.secondary.main,
                backgroundColor: lighten(theme.palette.secondary.light, 0.85),
            }
            : {
                color: theme.palette.text.primary,
                backgroundColor: theme.palette.secondary.dark,
            },
    spacer: {
        flex: '1 1 100%',
    },
    actions: {
        color: theme.palette.text.secondary,
        display: 'flex',
    },
    title: {
        flex: '0 0 auto',
    },
});

const MyComponent = (withStyles(toolbarStyles)(TableToolbar));
export default MyComponent;