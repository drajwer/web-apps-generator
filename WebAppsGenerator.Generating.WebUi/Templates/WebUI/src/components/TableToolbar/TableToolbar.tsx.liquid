import * as React from 'react';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import FilterListIcon from '@material-ui/icons/FilterList';
import AddIcon from '@material-ui/icons/Add';
import RefreshIcon from '@material-ui/icons/Refresh';
import Input from '@material-ui/core/Input';
import { withStyles } from '@material-ui/core/styles';
import { lighten } from '@material-ui/core/styles/colorManipulator';
import history from 'src/history';
import './TableToolbar.css';

interface ITableToolbarProps {
    classes: any,
    showAddButton: boolean,
    numSelected: number,
    tableTitle: string,
    onRefresh: () => void,
    onFilterChange: (event: object) => void
    onFilterHide: () => void,
};

interface ITableToolbarState {
    showFilterInput: boolean
}

class TableToolbar extends React.Component<ITableToolbarProps, ITableToolbarState> {
    constructor(props: ITableToolbarProps) {
        super(props);
        this.state = {
            showFilterInput: false
        };
    }
    public render() {
        const { showAddButton, numSelected, classes, tableTitle, onRefresh, onFilterHide } = this.props;

        const handleAddClick = () => {
            history.push(`${history.location.pathname}/new`);
        }

        const onFilterClick = () => {
            this.setState({ showFilterInput: !this.state.showFilterInput });
            onFilterHide();
        }

        return (
            <Toolbar
                className={"root " + (numSelected > 0 ? classes.highlight : "")}
            >
                <div className="title">
                    {numSelected > 0 ? (
                        <Typography color="inherit" variant="subtitle1">
                            {numSelected} selected
                    </Typography>
                    ) : (
                            <Typography variant="h6" id="tableTitle">
                                {tableTitle}
                            </Typography>
                        )}
                </div>
                <div className="control-panel">
                    {this.state.showFilterInput
                        ?
                        <div className="filter-block">
                            <div className="filter-label">
                                <Typography variant="subtitle1">
                                    Filter by:
                            </Typography>
                            </div>
                            <div className="filter-input">
                                <Input onChange={this.props.onFilterChange} />
                            </div>
                        </div>
                        : null
                    }
                    <div className="actions">
                        <Tooltip title="Filter list">
                            <IconButton aria-label="Filter list" onClick={onFilterClick}>
                                <FilterListIcon />
                            </IconButton>
                        </Tooltip>

                        <Tooltip title="Refresh list">
                            <IconButton aria-label="Refresh list">
                                <RefreshIcon onClick={onRefresh} />
                            </IconButton>
                        </Tooltip>
                        {
                            showAddButton ?
                                (<Tooltip title="Add item">
                                    <IconButton aria-label="Add item">
                                        <AddIcon onClick={handleAddClick} />
                                    </IconButton>
                                </Tooltip>)
                                :
                                null
                        }
                    </div>
                </div>
            </Toolbar>
        );
    }
};

const toolbarStyles = (theme: any) => ({
    highlight:
        theme.palette.type === 'light'
            ? {
                color: theme.palette.secondary.main,
                backgroundColor: lighten(theme.palette.secondary.light, 0.85),
            }
            : {
                color: theme.palette.text.primary,
                backgroundColor: theme.palette.secondary.dark,
            },
});

const MyComponent = (withStyles(toolbarStyles)(TableToolbar));
export default MyComponent;