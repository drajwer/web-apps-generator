using System.Linq;
using Microsoft.EntityFrameworkCore;

namespace {{{Params.CoreProjectName}}.Context
{
    public class Repository<T> where T : class
    {
        private readonly DbSet<T> _dbSet;
        private readonly AppDbContext _dbContext;

        public Repository(AppDbContext dbContext)
        {
            _dbSet = dbContext.Set<T>();
            _dbContext = dbContext;
        }

        public IQueryable<T> GetAll()
        {
            return _dbSet.AsQueryable();
        }

        public T Get(int id)
        {
            return _dbSet.Find(id);
        }

		public T Create(T entity)
        {
            _dbSet.Add(entity);
            _dbContext.SaveChanges();
            return entity;
        }

        public T Update(int id, T entity)
        {
            _dbSet.Update(entity);
			var elem = Get(id);
            _dbContext.SaveChanges();
            return elem;
        }

        public void Delete(int id)
        {
            _dbSet.Remove(Get(id));
            _dbContext.SaveChanges();
        }
    }
}
